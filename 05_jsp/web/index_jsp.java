/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.65
 * Generated at: 2021-04-26 04:48:10 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {


		//클래스선언부에 작성되는 코드를 작성할 수 있다.
		
		String name="유병승";//default 접근제한자를 갖는 멤버변수
		
		private int age=19;
		
		/* name; */
		/* if(name.equals("유병승")){
			System.out.println("안녕");
		} 클래스선언부에 들어가는 코드로 조건문, 반복문을 사용할 수 없다!*/
		
		/* for(int i=0;i<10;i++){
			
		} */
		
		// public void test(){
		public String test(){
			
			System.out.println("하하 호호");
			
			return "점심은 맛있어!";
		}
		
	
  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>나의 jsp 첫 페이지</title>\n");
      out.write("</head>\n");
      out.write("\n");
      out.write("<body>\n");
      out.write("\t<h1>안녕 나의 첫 jsp 패이지</h1>\n");
      out.write("\t\n");
      out.write("\t<h2>jsp태그에 대해 알아보자</h2>\n");
      out.write("\t\n");
      out.write("\t<p>\n");
      out.write("\t\tjsp태그는 html문서에서 자바 코드를 사용할 수 있게 하는태그.\n");
      out.write("\t\t&lt;%&gt; -> 태그에 %가 있으면 자바 코드로 인식\n");
      out.write("\t\t기본적인 자바 코드를 작성할 때는 스크립트릿 태그를 이용해서 작성 -> &lt;%&gt; \n");
      out.write("\t\t(예 : 지역변수 조건문, 반복문, 메소드 호*출get/ste) 을 사용하 ㄹ때 사용 <br>)\n");
      out.write("\t\tjsp로 생성되는 클래스의멤버변수, 메소드 등을 선언할 때는 지시자 태그를 이용 &lt; %! &gt; ( 잘 안쓰는 방법 )\n");
      out.write("\t\t자바코드로 작성된 html변수를 화면에 출력하려면 : &lt;%=&gt;<br>\n");
      out.write("\t</p>\n");
      out.write("\t\n");
      out.write("\t\n");
      out.write("\t\n");
      out.write("\t<h3>지시자 태그 이용하기</h3>\n");
      out.write("\t\n");
      out.write("\t  \n");
      out.write("\t");
      out.write("\n");
      out.write("\t\n");
      out.write("\t<h3>선언된 자바코드 화면에 출력하기 : 표현식</h3>\n");
      out.write("\t\n");
      out.write("\t<h4>당신의 이름은 ");
      out.print(name );
      out.write("</h4>\n");
      out.write("\t<h4>당신의 나이는 ");
      out.print(age );
      out.write("</h4>\n");
      out.write("\t<h4>메소드 실행 ");
      out.print(test());
      out.write("</h4>\n");
      out.write("\t\n");
      out.write("\t\n");
      out.write("\t\n");
      out.write("\t\n");
      out.write("\t<h3>스크립트립 이용하기</h3>\n");
      out.write("\t\n");
      out.write("\t<p>지역변수, 조건문, 반복문 사용 가능</p>\n");
      out.write("\t\n");
      out.write("\t");

		String addr = "경기도 시흥시";
	
		// 지역변수라서 접근제한자 사용 불가
		
		// private double height = 180.5;
		
		String[] names = {"유병승", "김상현", "김두호", "김지한"};
		
	
      out.write("\n");
      out.write("\t\n");
      out.write("\t<ul>\n");
      out.write("\t\n");
      out.write("\t\t");
 for(int i=0; i < names.length; i++) { 
			
			if(names[i].equals(name)) { 
			
			
      out.write("\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t<li>");
      out.print( names[i] );
      out.write("</li>\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t");
}
			
		 } 
      out.write("\n");
      out.write("\t\t\n");
      out.write("\t</ul>\n");
      out.write("\t\n");
      out.write("\t\n");
      out.write("\t");
 if(age > 18) { 
      out.write("\n");
      out.write("\t\t\n");
      out.write("\t\t<h1>당신은 18세 이상이네요</h1>\n");
      out.write("\t");
 } else { 
      out.write("\n");
      out.write("\t\n");
      out.write("\t\t<h1>미성년이네요</h1>\n");
      out.write("\t ");
 } 
      out.write("\n");
      out.write("\t\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
